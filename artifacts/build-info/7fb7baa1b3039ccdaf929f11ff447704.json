{
	"id": "7fb7baa1b3039ccdaf929f11ff447704",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"variables.sol": {
				"content": "// SPDX-License-Identifier: Unlicensed\n\npragma solidity >=0.7.0;\n\ncontract variables {\n\n    // state variables  ==  variable whose values are permanently stored in a contract storage\n    // local variables == variables whose value is present till function is executing \n    // global variables == special variable in global namespace used to get information about the blockchain\n\n\n    // NOTE: Solidity is statically typed language, so state or local variables needs to be specified during declaration. \n    // NOTE: THERE IS NO CONCEPT OF UNDEFINED OR NULL\n\n\n\n    // SCOPE VARIABLES\n\n    // public  -- can be accessed internally as well as via message\n    // Internal -- can be accessed only internally from the current contract or contract deriving from it without using this.\n    // Private -- can be accessed only internally from current contract they are defined not in the derived contract from it.\n    \n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"variables.sol": {
				"variables": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"variables.sol\":66:911  contract variables {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"variables.sol\":66:911  contract variables {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205bfbf5d6b0083bb06ccf82b493f1288a951995bc7a7401d7284dcd9563cb110564736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205bfbf5d6b0083bb06ccf82b493f1288a951995bc7a7401d7284dcd9563cb110564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xFB CREATE2 0xD6 0xB0 ADDMOD EXTCODESIZE 0xB0 PUSH13 0xCF82B493F1288A951995BC7A74 ADD 0xD7 0x28 0x4D 0xCD SWAP6 PUSH4 0xCB110564 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "66:845:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205bfbf5d6b0083bb06ccf82b493f1288a951995bc7a7401d7284dcd9563cb110564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xFB CREATE2 0xD6 0xB0 ADDMOD EXTCODESIZE 0xB0 PUSH13 0xCF82B493F1288A951995BC7A74 ADD 0xD7 0x28 0x4D 0xCD SWAP6 PUSH4 0xCB110564 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "66:845:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 911,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bfbf5d6b0083bb06ccf82b493f1288a951995bc7a7401d7284dcd9563cb110564736f6c63430008010033",
									".code": [
										{
											"begin": 66,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 911,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"variables.sol\":\"variables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"variables.sol\":{\"keccak256\":\"0xf6bdb389efd04b24b5043c8ba6b2aa8b6583537e75a091a3aad2919724714884\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://8d6b3cbb2901f496f3b754dd9e124cbe487d0c7bdd0a4fd5ad349f6499af1d83\",\"dweb:/ipfs/QmaHqbaV27C7WRKzarMQg8vuDVguDUiDS1pvdV6JtQU8VN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"variables.sol": {
				"ast": {
					"absolutePath": "variables.sol",
					"exportedSymbols": {
						"variables": [
							2
						]
					},
					"id": 3,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "variables",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "66:845:0"
						}
					],
					"src": "40:872:0"
				},
				"id": 0
			}
		}
	}
}